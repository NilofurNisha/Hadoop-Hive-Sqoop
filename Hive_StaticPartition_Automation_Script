Hive Static Partition Load Automation script:


1.Create some sample data in the /home/hduser/hivepart location as given below:

cp /home/hduser/hive/data/txns /home/hduser/hivepart/txns_20181212_PADE

cp /home/hduser/hive/data/txns /home/hduser/hivepart/txns_20181212_NY

cp /home/hduser/hive/data/txns /home/hduser/hivepart/txns_20181213_PADE

cp /home/hduser/hive/data/txns /home/hduser/hivepart/txns_20181213_NY



2.Create a shell script namely hivepart.ksh in the /home/hduser/hivepart location, give execute permission and execute as 
command -> bash hivepart.ksh /home/hduser/hivepart retail.txnrecsbycatdtreg

set -x

Shell Script:
================
#!/bin/bash

#Script to create hive partition load

#bash hivepart.ksh /home/hduser/hivepart retail.txnrecsbycatdtreg



echo "$0 is starting"

echo "$1 is the source path of txn data sent by the source system"

echo "$2 is the hive table with schema prefixed will be loaded with the above files generically"



rm -f $1/partload.hql



if [ $# -ne 2 ]

then

echo "$0 requires source data path and the target table name to load"

exit 2

fi



echo "$1 is the path"

echo "$2 is the tablename"



for filepathnm in $1/txns_*; do

echo "file with path name is $filepathnm"

filenm=$(basename $filepathnm)

echo "$filenm"

dt=`echo $filenm |awk -F'_' '{print $2}'`

dtfmt=`date -d $dt +'%Y-%m-%d'`

echo $dtfmt

reg=`echo $filenm |awk -F'_' '{print $3}'`

echo $reg

echo "LOAD DATA LOCAL INPATH '$1/$filenm' OVERWRITE INTO TABLE $2 PARTITION (datadt='$dtfmt',region='$reg');" >> $1/partload.hql

done



#cp /home/hduser/hivepart/partload.hql /home/hduser/partload.hql

echo "loading hive table"

hive -f $1/partload.hql


===============================================

Execute hive queries in linux terminal
1.hive -e "query goes here"
hive -e "select * from db.tablename;"

2.hive -f "filepathname(hql file)"
hive -f /home/hduser/hivepart.hql

hivepart.hql contains the hive queries 
